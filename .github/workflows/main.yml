name: Deploy
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo on remote machine
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          docker kill quizgamebackend_queue_1 quizgamebackend_app_1 quizgamebackend_redis_1 quizgamebackend_nginx_1
          rm -rf /tmp/QuizGameBackend
          cd /tmp          
          git clone https://github.com/TauanMartins/QuizGameBackend.git
    - name: Set permissions and deploy
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script: |
          cd /tmp/QuizGameBackend
          chmod -R 777 ./          
          docker system prune -af
          docker-compose up -d
          docker-compose exec -T app bash -c "cp .env.example .env && \
          sed -i "s/APP_DEBUG=true/APP_DEBUG=false/g" .env && \
          sed -i "s/APP_NAME=.*/APP_NAME=QuizGameBackend/g" .env && \
          sed -i "s/APP_ENV=.*/APP_ENV=production/g" .env && \
          sed -i "s/DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/g" .env && \
          sed -i "s/DB_PORT=.*/DB_PORT=${{ secrets.DB_PORT }}/g" .env && \
          sed -i "s/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/g" .env && \
          sed -i "s/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/g" .env && \
          sed -i "s/DB_SCHEMA=.*/DB_SCHEMA=${{ secrets.SCHEMA }}/g" .env && \
          sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/g" .env"
          docker-compose exec -T app bash -c "composer install && php artisan key:generate"
          
